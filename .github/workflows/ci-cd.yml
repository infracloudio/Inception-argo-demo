name: CI and CD
on:
  push:
    branches: [ master ]
jobs:
  build:
    name: Building, Pushing and Deploying the Image
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: File changes for productcatalouge 
      id: productcatalouge
      uses: tj-actions/changed-files@v34
      with:
        files: |
            /java-sample-application/source-code/productcatalogue/**
    
    -  name: Build and push productcatalouge image
       #if: steps.productcatalouge.outputs.any_changed == 'true'
       env:
         image-name-productcatalogue: productcatalouge-image
         
       id: build-and-push-productcatalouge-image
       uses: docker/build-push-action@v3
       with:
        context: ./java-sample-application/source-code/productcatalogue
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.image-name-productcatalogue }}:${{ github.sha }}
    
    - name: File changes for shopfront
      id: shopfront
      uses: tj-actions/changed-files@v34
      with:
        files: |
            /java-sample-application/source-code/shopfront/**

    -  name: Build and push shopfront image
     #  if: steps.shopfront.outputs.any_changed == 'true'
       env:
         image-name-shopfront: shopfront-image
         
       id: build-and-push-shopfront-image
       uses: docker/build-push-action@v3
       with:
        context: ./java-sample-application/source-code/shopfront
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.image-name-shopfront }}:${{ github.sha }}
        
    -  name: Update Version for productcatalouge image
       #if: steps.productcatalouge.outputs.any_changed == 'true'
       run: |
          version=$(cat ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml | grep productcatalouge-image: | awk '{print $2}' | cut -d ':' -f 2 | rev | cut -c2- | rev)
          echo "$version for test enviornment"
          sed -i "s/$version/${{ github.sha }}/" ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml
          cat ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml | grep productcatalouge-image: | awk '{print $2}' 
    
    -  name: Update Version for shopfront image
       #if: steps.shopfront.outputs.any_changed == 'true'
       run: |
          version=$(cat ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml | grep shopfront-image: | awk '{print $2}' | cut -d ':' -f 2 | rev | cut -c2- | rev)
          echo "$version for test enviornment"
          sed -i "s/$version/${{ github.sha }}/" ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml
          cat ./java-sample-application/kustomize-manifest/overlays/test/kustomization.yaml | grep shopfront-image:: | awk '{print $2}' 

    -  name: Commit and push changes
       uses: devops-infra/action-commit-push@v0.3
       with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: Image version updated
